// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PickAnIcon.Database;

namespace PickAnIcon.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210417150912_Users")]
    partial class Users
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PickAnIcon.Database.Entities.Icon", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastEdited")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("Icons");
                });

            modelBuilder.Entity("PickAnIcon.Database.Entities.IconPart", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ColorHEX")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<int?>("IconID")
                        .HasColumnType("int");

                    b.Property<int>("Layer")
                        .HasColumnType("int");

                    b.Property<int?>("PartID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("IconID");

                    b.HasIndex("PartID");

                    b.ToTable("IconParts");
                });

            modelBuilder.Entity("PickAnIcon.Database.Entities.Part", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<bool>("IsFree")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.ToTable("Parts");
                });

            modelBuilder.Entity("PickAnIcon.Database.Entities.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PickAnIcon.Database.Entities.Icon", b =>
                {
                    b.HasOne("PickAnIcon.Database.Entities.User", null)
                        .WithMany("Icons")
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("PickAnIcon.Database.Entities.IconPart", b =>
                {
                    b.HasOne("PickAnIcon.Database.Entities.Icon", null)
                        .WithMany("IconParts")
                        .HasForeignKey("IconID");

                    b.HasOne("PickAnIcon.Database.Entities.Part", "Part")
                        .WithMany()
                        .HasForeignKey("PartID");

                    b.Navigation("Part");
                });

            modelBuilder.Entity("PickAnIcon.Database.Entities.Icon", b =>
                {
                    b.Navigation("IconParts");
                });

            modelBuilder.Entity("PickAnIcon.Database.Entities.User", b =>
                {
                    b.Navigation("Icons");
                });
#pragma warning restore 612, 618
        }
    }
}
